import React, { useState, useEffect, useRef } from 'react';
import { motion, AnimatePresence } from 'framer-motion';
import { 
  X, Send, Bot, User, Brain, Calendar, Clock, Sparkles, 
  ThumbsUp, ThumbsDown, Copy, RotateCcw, Minimize2, Maximize2,
  Zap, Star, Shield, MessageSquare, Phone, Mail, ArrowRight,
  CheckCircle, AlertCircle, Info, Lightbulb, Target, Award
} from 'lucide-react';
import { useLanguage } from '../contexts/LanguageContext';
import { ConversationManager } from '../data/aiConversationManager';
import { ResponseTemplateEngine, QUICK_RESPONSES } from '../data/aiResponseTemplates';
import { AI_RESPONSE_GUIDELINES, enhanceResponse, generateContextualResponse, ConversationState, Message as AIMessage } from '../data/aiResponseGuidelines';

interface Message extends AIMessage {
  id: string;
  text: string;
  isBot: boolean;
  timestamp: Date;
  typing?: boolean;
  intent?: string;
  feedback?: 'positive' | 'negative' | null;
  confidence?: number;
  helpful?: boolean | null;
  messageType?: 'text' | 'quick_action' | 'booking_prompt' | 'feature_highlight';
}

interface AIChatProps {
  isOpen: boolean;
  onClose: () => void;
}

const AIChat: React.FC<AIChatProps> = ({ isOpen, onClose }) => {
  const { t, currentLanguage } = useLanguage();
  const [messages, setMessages] = useState<Message[]>([]);
  const [inputText, setInputText] = useState('');
  const [isTyping, setIsTyping] = useState(false);
  const [isMinimized, setIsMinimized] = useState(false);
  const [isBookingModalOpen, setIsBookingModalOpen] = useState(false);
  const [isBookingLoading, setIsBookingLoading] = useState(true);
  const [showQuickActions, setShowQuickActions] = useState(true);
  const [conversationManager] = useState(() => new ConversationManager(currentLanguage.code as 'sv' | 'en'));
  const [templateEngine] = useState(() => new ResponseTemplateEngine());
  const [conversationState, setConversationState] = useState<ConversationState>({
    messageHistory: [],
    userProfile: {
      previousInteractions: 0,
      preferredLanguage: currentLanguage.code,
      interests: [],
      urgencyLevel: 'medium'
    },
    currentIntent: '',
    conversationStage: 'initial_inquiry',
    lastTopics: []
  });
  const messagesEndRef = useRef<HTMLDivElement>(null);
  const inputRef = useRef<HTMLInputElement>(null);

  // Premium welcome message with rich content
  useEffect(() => {
    if (isOpen && messages.length === 0) {
      const welcomeText = currentLanguage.code === 'sv' 
        ? 'üëã **Hej och v√§lkommen! Jag √§r Axie fr√•n Axie Studio.**\n\nü§ñ **Din personliga AI-assistent** som kan hj√§lpa dig med alla v√•ra digitala l√∂sningar:\n\nüåê **Professionella Webbplatser** - Fr√•n 8 995 kr startavgift\n‚Ä¢ Responsiv design som fungerar perfekt p√• alla enheter\n‚Ä¢ SEO-optimering f√∂r b√§ttre synlighet i Google\n‚Ä¢ Integrerad AI-chatbot (som denna!)\n‚Ä¢ Hosting, s√§kerhet och support ing√•r\n\nüìÖ **Intelligenta Bokningssystem** - Fr√•n 10 995 kr\n‚Ä¢ Smart schemal√§ggning med konfliktdetektering\n‚Ä¢ Automatiska SMS och e-postp√•minnelser\n‚Ä¢ Betalningsintegration med Stripe och Swish\n‚Ä¢ Komplett CRM f√∂r kundhantering\n\nüõí **E-handelsl√∂sningar** - Fr√•n 10 995 kr\n‚Ä¢ Komplett webshop med produkthantering\n‚Ä¢ S√§kra betalningar och leveransalternativ\n‚Ä¢ Lagerhantering och orderhantering\n‚Ä¢ Marknadsf√∂ringsverktyg och analys\n\nüì± **Mobilappar** - iOS & Android utveckling\n‚Ä¢ Cross-platform appar som fungerar p√• alla enheter\n‚Ä¢ App Store och Google Play publicering\n‚Ä¢ Push-notifieringar och offline-funktionalitet\n‚Ä¢ Native prestanda och anv√§ndarupplevelse\n\n‚ú® **Jag √§r tr√§nad p√• all v√•r expertis och kunskap** och kan svara p√• detaljerade fr√•gor om:\n‚Ä¢ Tekniska specifikationer och funktioner\n‚Ä¢ Priser, paket och betalningsalternativ\n‚Ä¢ Projektprocesser och leveranstider\n‚Ä¢ Integration med befintliga system\n‚Ä¢ Support och underh√•ll\n‚Ä¢ Branschspecifika l√∂sningar\n\nüí° **Vad kan jag hj√§lpa dig med idag? St√§ll g√§rna specifika fr√•gor!**'
        : 'üëã **Hello and welcome! I\'m Axie from Axie Studio.**\n\nü§ñ **Your personal AI assistant** who can help you with all our digital solutions:\n\nüåê **Professional Websites** - From 8,995 SEK setup fee\n‚Ä¢ Responsive design that works perfectly on all devices\n‚Ä¢ SEO optimization for better visibility in Google\n‚Ä¢ Integrated AI chatbot (like this one!)\n‚Ä¢ Hosting, security and support included\n\nüìÖ **Intelligent Booking Systems** - From 10,995 SEK\n‚Ä¢ Smart scheduling with conflict detection\n‚Ä¢ Automatic SMS and email reminders\n‚Ä¢ Payment integration with Stripe and Swish\n‚Ä¢ Complete CRM for customer management\n\nüõí **E-commerce Solutions** - From 10,995 SEK\n‚Ä¢ Complete webshop with product management\n‚Ä¢ Secure payments and delivery options\n‚Ä¢ Inventory management and order processing\n‚Ä¢ Marketing tools and analytics\n\nüì± **Mobile Apps** - iOS & Android development\n‚Ä¢ Cross-platform apps that work on all devices\n‚Ä¢ App Store and Google Play publishing\n‚Ä¢ Push notifications and offline functionality\n‚Ä¢ Native performance and user experience\n\n‚ú® **I\'m trained on all our expertise and knowledge** and can answer detailed questions about:\n‚Ä¢ Technical specifications and features\n‚Ä¢ Pricing, packages and payment options\n‚Ä¢ Project processes and delivery times\n‚Ä¢ Integration with existing systems\n‚Ä¢ Support and maintenance\n‚Ä¢ Industry-specific solutions\n\nüí° **How can I help you today? Feel free to ask specific questions!**';
      
      const welcomeMessage: Message = {
        id: 'welcome',
        text: welcomeText,
        isBot: true,
        timestamp: new Date(),
        intent: 'welcome',
        confidence: 1.0,
        messageType: 'feature_highlight'
      };
      setMessages([welcomeMessage]);
      
      // Update conversation state
      setConversationState(prev => ({
        ...prev,
        messageHistory: [welcomeMessage],
        userProfile: {
          ...prev.userProfile,
          intent: 'welcome',
          feedback: null
        }
      }));
    }
  }, [isOpen, currentLanguage.code]);

  // Auto-scroll to bottom with smooth animation
  useEffect(() => {
    if (!isMinimized) {
      messagesEndRef.current?.scrollIntoView({ behavior: 'smooth', block: 'end' });
    }
  }, [messages, isMinimized]);

  // Focus input when opened
  useEffect(() => {
    if (isOpen && !isMinimized) {
      setTimeout(() => inputRef.current?.focus(), 100);
    }
  }, [isOpen, isMinimized]);

  // Enhanced AI response function with premium features
  const getAIResponse = async (userMessage: string): Promise<string> => {
    const thinkingTime = Math.min(1000 + (userMessage.length * 25), 3000);
    await new Promise(resolve => setTimeout(resolve, thinkingTime));

    try {
      const response = await conversationManager.processMessage(userMessage);
      return response;
    } catch (error) {
      console.error('AI response error:', error);
      return currentLanguage.code === 'sv' 
        ? 'ü§ñ **Urs√§kta f√∂r det tekniska problemet!**\n\nN√•got gick fel med min AI-motor just nu. Detta h√§nder ibland n√§r systemet √§r √∂verbelastat.\n\nüîß **Vad du kan g√∂ra:**\n‚Ä¢ F√∂rs√∂k st√§lla din fr√•ga igen om ett √∂gonblick\n‚Ä¢ Kontakta oss direkt p√• stefan@axiestudio.se\n‚Ä¢ Ring oss p√• +46 735 132 620\n‚Ä¢ Boka en kostnadsfri konsultation direkt\n\nüí° **Jag √§r vanligtvis mycket p√•litlig och kan svara p√• alla fr√•gor om v√•ra digitala l√∂sningar!**'
        : 'ü§ñ **Sorry for the technical issue!**\n\nSomething went wrong with my AI engine right now. This sometimes happens when the system is overloaded.\n\nüîß **What you can do:**\n‚Ä¢ Try asking your question again in a moment\n‚Ä¢ Contact us directly at stefan@axiestudio.se\n‚Ä¢ Call us at +46 735 132 620\n‚Ä¢ Book a free consultation directly\n\nüí° **I\'m usually very reliable and can answer all questions about our digital solutions!**';
    }
  };

  const handleSendMessage = async () => {
    if (!inputText.trim() || isTyping) return;

    const userMessage: Message = {
      id: Date.now().toString(),
      text: inputText.trim(),
      isBot: false,
      timestamp: new Date(),
      feedback: null,
      confidence: 1.0,
      messageType: 'text'
    };

    setMessages(prev => [...prev, userMessage]);
    setInputText('');
    setIsTyping(true);
    setShowQuickActions(false);

    try {
      const aiResponseText = await getAIResponse(userMessage.text);
      
      const aiMessage: Message = {
        id: (Date.now() + 1).toString(),
        text: aiResponseText,
        isBot: true,
        timestamp: new Date(),
        feedback: null,
        confidence: 0.95,
        messageType: 'text'
      };

      setMessages(prev => [...prev, aiMessage]);
      
      // Update conversation state
      setConversationState(prev => ({
        ...prev,
        messageHistory: [...prev.messageHistory, userMessage, aiMessage],
        currentIntent: 'intent',
        lastTopics: [...prev.lastTopics.slice(-4), 'intent']
      }));

      // Check for booking intent and show booking prompt
      if (aiResponseText.includes('boka') || aiResponseText.includes('book') || aiResponseText.includes('konsultation')) {
        setTimeout(() => {
          const bookingPrompt: Message = {
            id: (Date.now() + 2).toString(),
            text: currentLanguage.code === 'sv' 
              ? 'üéØ **Perfekt timing f√∂r en konsultation!**\n\nDet verkar som att du √§r intresserad av v√•ra tj√§nster. Vill du boka en kostnadsfri konsultation direkt nu?\n\n‚è∞ **Vad du f√•r:**\n‚Ä¢ 30-60 minuters personlig genomg√•ng\n‚Ä¢ Skr√§ddarsydda rekommendationer f√∂r ditt f√∂retag\n‚Ä¢ Kostnadsfri r√•dgivning fr√•n AI-expert Stefan\n‚Ä¢ Ingen f√∂rs√§ljning - bara √§kta hj√§lp\n‚Ä¢ M√∂jlighet att tr√§ffas fysiskt i J√∂nk√∂ping eller digitalt\n\n‚ú® **Bokningsprocessen tar bara 2 minuter och du v√§ljer sj√§lv tid som passar dig!**'
              : 'üéØ **Perfect timing for a consultation!**\n\nIt seems like you\'re interested in our services. Would you like to book a free consultation right now?\n\n‚è∞ **What you get:**\n‚Ä¢ 30-60 minutes of personal review\n‚Ä¢ Tailored recommendations for your business\n‚Ä¢ Free advice from AI expert Stefan\n‚Ä¢ No sales pitch - just genuine help\n‚Ä¢ Option to meet in person in J√∂nk√∂ping or digitally\n\n‚ú® **The booking process takes only 2 minutes and you choose the time that suits you!**',
            isBot: true,
            timestamp: new Date(),
            messageType: 'booking_prompt',
            confidence: 1.0
          };
          setMessages(prev => [...prev, bookingPrompt]);
        }, 1500);
      }

      if (typeof window !== 'undefined' && window.trackAIInteraction) {
        window.trackAIInteraction('ai_response_generated', 'AI Assistant');
      }

    } catch (error) {
      console.error('AI response error:', error);
      const errorMessage: Message = {
        id: (Date.now() + 1).toString(),
        text: currentLanguage.code === 'sv' 
          ? '‚ö†Ô∏è **Ett tekniskt fel uppstod**\n\nJag kunde inte behandla din f√∂rfr√•gan just nu p√• grund av ett systemfel.\n\nüîÑ **F√∂rs√∂k g√§rna:**\n‚Ä¢ St√§lla din fr√•ga igen om en stund\n‚Ä¢ Kontakta oss direkt p√• stefan@axiestudio.se\n‚Ä¢ Ring +46 735 132 620 f√∂r omedelbar hj√§lp\n‚Ä¢ Boka en kostnadsfri konsultation\n\nüí° **Vi svarar alltid inom 2 timmar p√• e-post och √§r tillg√§ngliga f√∂r samtal vardagar 9-17.**'
          : '‚ö†Ô∏è **A technical error occurred**\n\nI couldn\'t process your request right now due to a system error.\n\nüîÑ **Please try:**\n‚Ä¢ Asking your question again in a moment\n‚Ä¢ Contacting us directly at stefan@axiestudio.se\n‚Ä¢ Calling +46 735 132 620 for immediate help\n‚Ä¢ Booking a free consultation\n\nüí° **We always respond within 2 hours to emails and are available for calls weekdays 9-17.**',
        isBot: true,
        timestamp: new Date(),
        feedback: null,
        confidence: 1.0,
        messageType: 'text'
      };
      setMessages(prev => [...prev, errorMessage]);
    } finally {
      setIsTyping(false);
    }
  };

  // Premium quick action handlers
  const handleQuickAction = async (action: string) => {
    const quickMessages = {
      sv: {
        pricing: 'Jag vill veta detaljerat om era priser och paket. Vad kostar era olika tj√§nster och vad ing√•r i varje paket? Finns det n√•gra dolda kostnader jag b√∂r veta om?',
        booking: 'Jag √§r intresserad av att boka en kostnadsfri konsultation. Kan du ber√§tta mer om vad som h√§nder under konsultationen och hur bokningsprocessen fungerar?',
        website: 'Ber√§tta detaljerat om era webbplatsl√∂sningar. Vad ing√•r i paketet, vilka tekniker anv√§nder ni, och hur ser utvecklingsprocessen ut fr√•n start till f√§rdig webbplats?',
        ecommerce: 'Jag beh√∂ver en professionell webshop f√∂r mitt f√∂retag. Kan du f√∂rklara era e-handelsl√∂sningar, vilka funktioner som ing√•r, och hur ni hanterar betalningar och leveranser?',
        apps: 'Jag √§r intresserad av mobilappsutveckling. Kan ni utveckla appar f√∂r b√•de iOS och Android? Vad kostar det och hur l√•ng tid tar utvecklingsprocessen?',
        support: 'Jag beh√∂ver hj√§lp och support f√∂r min befintliga digitala l√∂sning. Vilken typ av support erbjuder ni och hur snabbt kan ni hj√§lpa till n√§r problem uppst√•r?'
      },
      en: {
        pricing: 'I want to know in detail about your pricing and packages. What do your different services cost and what is included in each package? Are there any hidden costs I should know about?',
        booking: 'I\'m interested in booking a free consultation. Can you tell me more about what happens during the consultation and how the booking process works?',
        website: 'Tell me in detail about your website solutions. What\'s included in the package, what technologies do you use, and what does the development process look like from start to finished website?',
        ecommerce: 'I need a professional webshop for my business. Can you explain your e-commerce solutions, what features are included, and how you handle payments and deliveries?',
        apps: 'I\'m interested in mobile app development. Can you develop apps for both iOS and Android? What does it cost and how long does the development process take?',
        support: 'I need help and support for my existing digital solution. What type of support do you offer and how quickly can you help when problems arise?'
      }
    };

    const lang = currentLanguage.code as 'sv' | 'en';
    const message = quickMessages[lang][action as keyof typeof quickMessages[typeof lang]];
    
    if (message) {
      setInputText(message);
      setTimeout(() => handleSendMessage(), 100);
    }
  };

  const handleMessageFeedback = (messageId: string, helpful: boolean) => {
    setMessages(prev => prev.map(msg => 
      msg.id === messageId ? { ...msg, helpful } : msg
    ));
    
    // Show thank you message
    const feedbackMessage: Message = {
      id: Date.now().toString(),
      text: helpful 
        ? (currentLanguage.code === 'sv' 
          ? 'üôè **Tack s√• mycket f√∂r din positiva feedback!**\n\nDet gl√§der mig att jag kunde hj√§lpa dig p√• ett bra s√§tt. Din feedback hj√§lper mig att f√∂rst√• vad som fungerar bra och forts√§tta leverera v√§rdefull information.\n\n‚ú® **Har du fler fr√•gor om v√•ra digitala l√∂sningar? Jag finns h√§r f√∂r att hj√§lpa!**' 
          : 'üôè **Thank you so much for your positive feedback!**\n\nI\'m glad I could help you in a good way. Your feedback helps me understand what works well and continue delivering valuable information.\n\n‚ú® **Do you have more questions about our digital solutions? I\'m here to help!**')
        : (currentLanguage.code === 'sv' 
          ? 'üìù **Tack f√∂r din √§rliga feedback!**\n\nJag uppskattar att du tog dig tid att ber√§tta att mitt svar inte var tillr√§ckligt bra. Detta hj√§lper mig att f√∂rb√§ttra mina svar fram√∂ver.\n\nüîÑ **Kan jag f√∂rs√∂ka igen?** St√§ll g√§rna samma fr√•ga p√• ett annat s√§tt, eller l√•t mig veta vad som saknades i mitt svar.\n\nüí° **Alternativt kan du kontakta Stefan direkt p√• stefan@axiestudio.se f√∂r mer detaljerad hj√§lp.**' 
          : 'üìù **Thank you for your honest feedback!**\n\nI appreciate that you took the time to tell me that my answer wasn\'t good enough. This helps me improve my responses going forward.\n\nüîÑ **Can I try again?** Feel free to ask the same question in a different way, or let me know what was missing from my answer.\n\nüí° **Alternatively, you can contact Stefan directly at stefan@axiestudio.se for more detailed help.**'),
      isBot: true,
      timestamp: new Date(),
      confidence: 1.0,
      messageType: 'text'
    };
    
    setTimeout(() => {
      setMessages(prev => [...prev, feedbackMessage]);
    }, 500);
  };

  const handleCopyMessage = (text: string) => {
    navigator.clipboard.writeText(text.replace(/\*\*/g, '').replace(/\n/g, ' '));
    
    // Show copy confirmation
    const copyMessage: Message = {
      id: Date.now().toString(),
      text: currentLanguage.code === 'sv' 
        ? 'üìã **Text kopierad till urklipp!**\n\nInformationen har sparats i ditt urklipp och du kan nu klistra in den var du vill.\n\nüí° **Tips:** Du kan ocks√• spara viktig information genom att skicka den till dig sj√§lv via e-post eller anteckningar.' 
        : 'üìã **Text copied to clipboard!**\n\nThe information has been saved to your clipboard and you can now paste it wherever you want.\n\nüí° **Tip:** You can also save important information by emailing it to yourself or saving it in notes.',
      isBot: true,
      timestamp: new Date(),
      confidence: 1.0,
      messageType: 'text'
    };
    
    setTimeout(() => {
      setMessages(prev => [...prev, copyMessage]);
    }, 200);
  };

  const handleClearChat = () => {
    setMessages([]);
    setShowQuickActions(true);
    setConversationState(prev => ({
      ...prev,
      messageHistory: [],
      currentIntent: '',
      lastTopics: []
    }));
    
    // Re-initialize with welcome message
    setTimeout(() => {
      const welcomeMessage: Message = {
        id: 'welcome-' + Date.now(),
        text: currentLanguage.code === 'sv' 
          ? 'üîÑ **Chatten har √•terst√§llts!**\n\nHej igen! Nu har vi en fr√§sch start och jag √§r redo att hj√§lpa dig med nya fr√•gor.\n\nü§ñ **Jag kan fortfarande hj√§lpa dig med:**\n‚Ä¢ Detaljerade fr√•gor om v√•ra webbplatser, bokningssystem, e-handel och mobilappar\n‚Ä¢ Priser, paket och betalningsalternativ\n‚Ä¢ Tekniska specifikationer och funktioner\n‚Ä¢ Projektprocesser och leveranstider\n‚Ä¢ Boka kostnadsfri konsultation\n\nüí° **Vad kan jag hj√§lpa dig med nu?**'
          : 'üîÑ **Chat has been reset!**\n\nHello again! Now we have a fresh start and I\'m ready to help you with new questions.\n\nü§ñ **I can still help you with:**\n‚Ä¢ Detailed questions about our websites, booking systems, e-commerce and mobile apps\n‚Ä¢ Pricing, packages and payment options\n‚Ä¢ Technical specifications and features\n‚Ä¢ Project processes and delivery times\n‚Ä¢ Book free consultation\n\nüí° **How can I help you now?**',
        isBot: true,
        timestamp: new Date(),
        intent: 'welcome',
        confidence: 1.0,
        messageType: 'text'
      };
      setMessages([welcomeMessage]);
    }, 500);
  };

  const handleKeyPress = (e: React.KeyboardEvent) => {
    if (e.key === 'Enter' && !e.shiftKey) {
      e.preventDefault();
      handleSendMessage();
    }
  };

  const handleIframeLoad = () => {
    setIsBookingLoading(false);
  };

  const handleCloseBooking = () => {
    setIsBookingModalOpen(false);
    setIsBookingLoading(true);
    
    // Add confirmation message
    const confirmMessage: Message = {
      id: Date.now().toString(),
      text: currentLanguage.code === 'sv' 
        ? '‚úÖ **Tack f√∂r att du tittade p√• bokningskalendern!**\n\nIngen stress alls - du kan alltid komma tillbaka och boka n√§r det passar dig b√§ttre.\n\nüìÖ **Kom ih√•g att konsultationen √§r:**\n‚Ä¢ Helt kostnadsfri och utan f√∂rpliktelser\n‚Ä¢ 30-60 minuter personlig genomg√•ng\n‚Ä¢ M√∂jlighet att tr√§ffas fysiskt eller digitalt\n‚Ä¢ Fokus p√• dina specifika behov och m√•l\n\nüí° **Finns det n√•got annat jag kan hj√§lpa dig med just nu? Jag kan svara p√• fr√•gor om v√•ra tj√§nster, priser eller tekniska detaljer.**'
        : '‚úÖ **Thanks for looking at the booking calendar!**\n\nNo stress at all - you can always come back and book when it suits you better.\n\nüìÖ **Remember that the consultation is:**\n‚Ä¢ Completely free and without obligations\n‚Ä¢ 30-60 minutes personal review\n‚Ä¢ Option to meet in person or digitally\n‚Ä¢ Focus on your specific needs and goals\n\nüí° **Is there anything else I can help you with right now? I can answer questions about our services, pricing or technical details.**',
      isBot: true,
      timestamp: new Date(),
      confidence: 1.0,
      messageType: 'text'
    };
    
    setTimeout(() => {
      setMessages(prev => [...prev, confirmMessage]);
    }, 500);
  };

  const toggleMinimize = () => {
    setIsMinimized(!isMinimized);
  };

  if (!isOpen) return null;

  return (
    <AnimatePresence>
      <motion.div
        className={`fixed inset-0 bg-black/60 backdrop-blur-md z-50 ${isMinimized ? 'pointer-events-none' : ''}`}
        initial={{ opacity: 0 }}
        animate={{ opacity: 1 }}
        exit={{ opacity: 0 }}
        onClick={onClose}
      >
        <motion.div
          className={`${
            isMinimized 
              ? 'w-96 h-20 bottom-4 right-4' 
              : 'w-full h-full'
          } bg-white flex flex-col overflow-hidden transition-all duration-500 ease-in-out shadow-2xl ${
            isMinimized ? 'fixed rounded-2xl' : ''
          }`}
          style={{ backgroundColor: 'white', colorScheme: 'light only' }}
          initial={{ scale: isMinimized ? 1 : 0.95, opacity: 0 }}
          animate={{ scale: 1, opacity: 1 }}
          exit={{ scale: 0.95, opacity: 0 }}
          transition={{ type: "spring", stiffness: 300, damping: 30 }}
          onClick={(e) => e.stopPropagation()}
        >
          {/* Premium Header */}
          {!isBookingModalOpen && (
            <div className="bg-gradient-to-r from-blue-600 via-purple-600 to-pink-600 text-white p-3 flex-shrink-0 shadow-lg relative overflow-hidden">
              {/* Animated background elements */}
              <div className="absolute inset-0 bg-gradient-to-r from-blue-400/20 to-purple-400/20 animate-pulse" />
              <div className="absolute top-0 right-0 w-16 h-16 bg-white/10 rounded-full -translate-y-8 translate-x-8 animate-float" />
              
              <div className="relative z-10 flex items-center justify-between">
                <div className="flex items-center space-x-3">
                  <div className="bg-white/20 p-2 rounded-xl backdrop-blur-sm border border-white/30 shadow-lg">
                    <Brain className="text-white" size={18} />
                  </div>
                  <div className={isMinimized ? 'hidden' : ''}>
                    <h3 className="font-bold text-white text-base">Axie AI Assistant</h3>
                    <div className="flex items-center space-x-2 text-white/90 text-xs">
                      <div className="w-2 h-2 bg-green-400 rounded-full animate-pulse" />
                      <span>Online ‚Ä¢ Powered by Axie Studio</span>
                      <Award size={12} className="text-yellow-300" />
                    </div>
                  </div>
                </div>
                
                <div className="flex items-center space-x-1">
                  {!isMinimized && (
                    <>
                      <button
                        onClick={handleClearChat}
                        className="bg-white/20 hover:bg-white/30 p-2 rounded-lg transition-all duration-300 touch-manipulation backdrop-blur-sm border border-white/30 group"
                        title="Clear chat"
                      >
                        <RotateCcw size={14} className="text-white group-hover:rotate-180 transition-transform duration-300" />
                      </button>
                      <button
                        onClick={() => setIsMinimized(true)}
                        className="bg-white/20 hover:bg-white/30 p-2 rounded-lg transition-all duration-300 touch-manipulation backdrop-blur-sm border border-white/30"
                        title="Minimize"
                      >
                        <Minimize2 size={14} className="text-white" />
                      </button>
                    </>
                  )}
                  
                  {isMinimized && (
                    <button
                      onClick={() => setIsMinimized(false)}
                      className="bg-white/20 hover:bg-white/30 p-2 rounded-lg transition-all duration-300 touch-manipulation backdrop-blur-sm border border-white/30"
                      title="Maximize"
                    >
                      <Maximize2 size={14} className="text-white" />
                    </button>
                  )}
                  
                  <button
                    onClick={onClose}
                    className="bg-white/20 hover:bg-red-500/80 p-2 rounded-lg transition-all duration-300 touch-manipulation backdrop-blur-sm border border-white/30"
                  >
                    <X size={14} className="text-white" />
                  </button>
                </div>
              </div>
            </div>
          )}

          {/* Premium Messages Area */}
          {!isBookingModalOpen && !isMinimized && (
            <div className="flex-1 overflow-y-auto bg-gradient-to-br from-gray-50 to-blue-50/30" style={{ scrollbarWidth: 'none', msOverflowStyle: 'none' }}>
              <div className="p-4 space-y-4">
                {messages.map((message) => (
                  <motion.div
                    key={message.id}
                    className={`flex ${message.isBot ? 'justify-start' : 'justify-end'}`}
                    initial={{ opacity: 0, y: 20, scale: 0.95 }}
                    animate={{ opacity: 1, y: 0, scale: 1 }}
                    transition={{ duration: 0.4, ease: "easeOut" }}
                  >
                    <div className={`flex items-start space-x-2 max-w-[90%] ${message.isBot ? '' : 'flex-row-reverse space-x-reverse'}`}>
                      {/* Avatar */}
                      <div className={`p-2 rounded-xl flex-shrink-0 shadow-md ${
                        message.isBot 
                          ? 'bg-gradient-to-br from-blue-500 to-purple-600' 
                          : 'bg-gradient-to-br from-gray-600 to-gray-700'
                      }`}>
                        {message.isBot ? (
                          <Bot size={16} className="text-white" />
                        ) : (
                          <User size={16} className="text-white" />
                        )}
                      </div>
                      
                      <div className="flex-1">
                        {/* Message bubble */}
                        <div className={`p-3 rounded-2xl shadow-md border ${
                          message.isBot 
                            ? 'bg-white border-gray-200 text-gray-800' 
                            : 'bg-gradient-to-r from-blue-500 to-purple-500 text-white border-transparent'
                        } ${
                          message.messageType === 'booking_prompt' ? 'ring-2 ring-green-400 bg-green-50' :
                          message.messageType === 'feature_highlight' ? 'ring-2 ring-blue-400 bg-blue-50' : ''
                        }`}>
                          {/* Message content */}
                          <div className="text-sm leading-relaxed whitespace-pre-line">
                            {message.text.split('**').map((part, index) => 
                              index % 2 === 1 ? <strong key={index} className="font-bold">{part}</strong> : part
                            )}
                          </div>
                          
                          {/* Special message type indicators */}
                          {message.messageType === 'booking_prompt' && (
                            <div className="mt-2 flex items-center space-x-1 text-green-700">
                              <Target size={12} />
                              <span className="text-xs font-medium">Booking Opportunity</span>
                            </div>
                          )}
                          
                          {message.messageType === 'feature_highlight' && (
                            <div className="mt-2 flex items-center space-x-1 text-blue-700">
                              <Lightbulb size={12} />
                              <span className="text-xs font-medium">AI Assistant Features</span>
                            </div>
                          )}
                          
                          {/* Message metadata */}
                          <div className="flex items-center justify-between mt-2 text-xs opacity-70">
                            <span>{message.timestamp.toLocaleTimeString()}</span>
                            {message.confidence && (
                              <div className="flex items-center space-x-1">
                                <Shield size={12} />
                                <span>AI Confidence: {Math.round(message.confidence * 100)}%</span>
                              </div>
                            )}
                          </div>
                        </div>
                        
                        {/* Message actions */}
                        {message.isBot && (
                          <div className="flex items-center space-x-2 mt-2 ml-1">
                            {/* Yes/No buttons for booking prompts */}
                            {message.messageType === 'booking_prompt' && (
                              <div className="flex items-center space-x-2 mr-4">
                                <button
                                  onClick={() => {
                                    setIsBookingModalOpen(true);
                                    // Add confirmation message
                                    const confirmMessage: Message = {
                                      id: Date.now().toString(),
                                      text: currentLanguage.code === 'sv' 
                                        ? '‚úÖ **Fantastiskt val!**\n\nJag √∂ppnar v√•r bokningskalender f√∂r dig nu d√§r du kan v√§lja en tid som passar dig perfekt.\n\nüéØ **I kalendern kan du:**\n‚Ä¢ Se alla tillg√§ngliga tider\n‚Ä¢ V√§lja mellan fysiskt m√∂te i J√∂nk√∂ping eller videom√∂te\n‚Ä¢ L√§gga till dina specifika fr√•gor och behov\n‚Ä¢ F√• omedelbar bekr√§ftelse\n\n‚è∞ **Stefan ser fram emot att tr√§ffa dig och diskutera hur vi kan hj√§lpa ditt f√∂retag v√§xa!**'
                                        : '‚úÖ **Fantastic choice!**\n\nI\'m opening our booking calendar for you now where you can choose a time that suits you perfectly.\n\nüéØ **In the calendar you can:**\n‚Ä¢ See all available times\n‚Ä¢ Choose between in-person meeting in J√∂nk√∂ping or video meeting\n‚Ä¢ Add your specific questions and needs\n‚Ä¢ Get immediate confirmation\n\n‚è∞ **Stefan looks forward to meeting you and discussing how we can help your business grow!**',
                                      isBot: true,
                                      timestamp: new Date(),
                                      confidence: 1.0,
                                      messageType: 'text'
                                    };
                                    setTimeout(() => {
                                      setMessages(prev => [...prev, confirmMessage]);
                                    }, 200);
                                  }}
                                  className="bg-gradient-to-r from-green-500 to-emerald-500 hover:from-green-600 hover:to-emerald-600 text-white px-4 py-2 rounded-lg text-sm font-semibold transition-all duration-300 shadow-md hover:shadow-lg transform hover:scale-105"
                                >
                                  {currentLanguage.code === 'sv' ? '‚úÖ Ja' : '‚úÖ Yes'}
                                </button>
                                <button
                                  onClick={() => {
                                    // Add "no" response message
                                    const noMessage: Message = {
                                      id: Date.now().toString(),
                                      text: currentLanguage.code === 'sv' 
                                        ? 'üëç **Absolut inga problem!**\n\nJag f√∂rst√•r att timing √§r viktigt och du kanske vill veta mer f√∂rst innan du bokar en konsultation.\n\nüí° **Jag kan hj√§lpa dig med:**\n‚Ä¢ Detaljerade fr√•gor om v√•ra tj√§nster och priser\n‚Ä¢ Tekniska specifikationer och funktioner\n‚Ä¢ Exempel p√• tidigare projekt och resultat\n‚Ä¢ J√§mf√∂relser mellan olika paketl√∂sningar\n‚Ä¢ Information om projektprocesser och leveranstider\n\nü§ñ **Jag √§r h√§r 24/7 och du kan alltid komma tillbaka f√∂r att boka n√§r du k√§nner dig redo. Vad vill du veta mer om?**'
                                        : 'üëç **Absolutely no problem!**\n\nI understand that timing is important and you might want to know more first before booking a consultation.\n\nüí° **I can help you with:**\n‚Ä¢ Detailed questions about our services and pricing\n‚Ä¢ Technical specifications and features\n‚Ä¢ Examples of previous projects and results\n‚Ä¢ Comparisons between different package solutions\n‚Ä¢ Information about project processes and delivery times\n\nü§ñ **I\'m here 24/7 and you can always come back to book when you feel ready. What would you like to know more about?**',
                                      isBot: true,
                                      timestamp: new Date(),
                                      confidence: 1.0,
                                      messageType: 'text'
                                    };
                                    setTimeout(() => {
                                      setMessages(prev => [...prev, noMessage]);
                                    }, 200);
                                  }}
                                  className="bg-gradient-to-r from-gray-400 to-gray-500 hover:from-gray-500 hover:to-gray-600 text-white px-4 py-2 rounded-lg text-sm font-semibold transition-all duration-300 shadow-md hover:shadow-lg transform hover:scale-105"
                                >
                                  {currentLanguage.code === 'sv' ? '‚ùå Nej tack' : '‚ùå No thanks'}
                                </button>
                              </div>
                            )}
                            
                            <button
                              onClick={() => handleCopyMessage(message.text)}
                              className="text-gray-400 hover:text-blue-600 p-1 rounded-md hover:bg-blue-50 transition-all duration-200 group"
                              title="Copy message"
                            >
                              <Copy size={12} className="group-hover:scale-110 transition-transform" />
                            </button>
                            <button
                              onClick={() => handleMessageFeedback(message.id, true)}
                              className={`p-1 rounded-md transition-all duration-200 ${
                                message.helpful === true 
                                  ? 'text-green-600 bg-green-50' 
                                  : 'text-gray-400 hover:text-green-600 hover:bg-green-50'
                              }`}
                              title="Helpful"
                            >
                              <ThumbsUp size={12} />
                            </button>
                            <button
                              onClick={() => handleMessageFeedback(message.id, false)}
                              className={`p-1 rounded-md transition-all duration-200 ${
                                message.helpful === false 
                                  ? 'text-red-600 bg-red-50' 
                                  : 'text-gray-400 hover:text-red-600 hover:bg-red-50'
                              }`}
                              title="Not helpful"
                            >
                              <ThumbsDown size={12} />
                            </button>
                          </div>
                        )}
                      </div>
                    </div>
                  </motion.div>
                ))}
                
                {/* Premium typing indicator */}
                {isTyping && (
                  <motion.div
                    className="flex justify-start"
                    initial={{ opacity: 0, y: 20 }}
                    animate={{ opacity: 1, y: 0 }}
                  >
                    <div className="flex items-start space-x-3">
                      <div className="p-2 rounded-xl bg-gradient-to-br from-blue-500 to-purple-600 shadow-md">
                        <Bot size={16} className="text-white" />
                      </div>
                      <div className="bg-white border border-gray-200 p-3 rounded-2xl shadow-md">
                        <div className="flex items-center space-x-2">
                          <div className="flex space-x-1">
                            <div className="w-2 h-2 bg-gradient-to-r from-blue-500 to-purple-500 rounded-full animate-bounce" />
                            <div className="w-2 h-2 bg-gradient-to-r from-blue-500 to-purple-500 rounded-full animate-bounce" style={{ animationDelay: '150ms' }} />
                            <div className="w-2 h-2 bg-gradient-to-r from-blue-500 to-purple-500 rounded-full animate-bounce" style={{ animationDelay: '300ms' }} />
                          </div>
                          <span className="text-sm text-gray-600 ml-2">Axie is thinking...</span>
                        </div>
                      </div>
                    </div>
                  </motion.div>
                )}
                <div ref={messagesEndRef} />
              </div>
            </div>
          )}

          {/* Premium Input Area */}
          {!isBookingModalOpen && !isMinimized && (
            <div className="p-4 border-t border-gray-200 bg-white flex-shrink-0 shadow-lg">
              <div>
                {/* Quick Actions */}
                {showQuickActions && (
                  <motion.div 
                    className="mb-4"
                    initial={{ opacity: 0, y: 20 }}
                    animate={{ opacity: 1, y: 0 }}
                    transition={{ delay: 0.5 }}
                  >
                    <h4 className="text-xs font-semibold text-gray-700 mb-2 flex items-center">
                      <Zap size={14} className="mr-1 text-blue-500" />
                      {currentLanguage.code === 'sv' ? 'Popul√§ra Fr√•gor - Klicka f√∂r snabba svar' : 'Popular Questions - Click for quick answers'}
                    </h4>
                    <div className="grid grid-cols-3 gap-2">
                      <button
                        onClick={() => handleQuickAction('pricing')}
                        className="bg-gradient-to-r from-blue-50 to-blue-100 hover:from-blue-100 hover:to-blue-200 text-blue-700 px-2 py-2 rounded-lg text-xs font-medium transition-all duration-300 flex items-center space-x-1 group"
                      >
                        <span className="text-sm">üí∞</span>
                        <span>{currentLanguage.code === 'sv' ? 'Priser & Paket' : 'Pricing & Packages'}</span>
                        <ArrowRight size={10} className="group-hover:translate-x-1 transition-transform" />
                      </button>
                      <button
                        onClick={() => handleQuickAction('website')}
                        className="bg-gradient-to-r from-purple-50 to-purple-100 hover:from-purple-100 hover:to-purple-200 text-purple-700 px-2 py-2 rounded-lg text-xs font-medium transition-all duration-300 flex items-center space-x-1 group"
                      >
                        <span className="text-sm">üåê</span>
                        <span>{currentLanguage.code === 'sv' ? 'Webbplatser' : 'Websites'}</span>
                        <ArrowRight size={10} className="group-hover:translate-x-1 transition-transform" />
                      </button>
                      <button
                        onClick={() => handleQuickAction('ecommerce')}
                        className="bg-gradient-to-r from-green-50 to-green-100 hover:from-green-100 hover:to-green-200 text-green-700 px-2 py-2 rounded-lg text-xs font-medium transition-all duration-300 flex items-center space-x-1 group"
                      >
                        <span className="text-sm">üõí</span>
                        <span>{currentLanguage.code === 'sv' ? 'Webshoppar' : 'Webshops'}</span>
                        <ArrowRight size={10} className="group-hover:translate-x-1 transition-transform" />
                      </button>
                      <button
                        onClick={() => handleQuickAction('apps')}
                        className="bg-gradient-to-r from-orange-50 to-orange-100 hover:from-orange-100 hover:to-orange-200 text-orange-700 px-2 py-2 rounded-lg text-xs font-medium transition-all duration-300 flex items-center space-x-1 group"
                      >
                        <span className="text-sm">üì±</span>
                        <span>{currentLanguage.code === 'sv' ? 'Mobilappar' : 'Mobile Apps'}</span>
                        <ArrowRight size={10} className="group-hover:translate-x-1 transition-transform" />
                      </button>
                      <button
                        onClick={() => handleQuickAction('booking')}
                        className="bg-gradient-to-r from-pink-50 to-pink-100 hover:from-pink-100 hover:to-pink-200 text-pink-700 px-2 py-2 rounded-lg text-xs font-medium transition-all duration-300 flex items-center space-x-1 group"
                      >
                        <span className="text-sm">üìÖ</span>
                        <span>{currentLanguage.code === 'sv' ? 'Bokningssystem' : 'Booking Systems'}</span>
                        <ArrowRight size={10} className="group-hover:translate-x-1 transition-transform" />
                      </button>
                      <button
                        onClick={() => handleQuickAction('support')}
                        className="bg-gradient-to-r from-gray-50 to-gray-100 hover:from-gray-100 hover:to-gray-200 text-gray-700 px-2 py-2 rounded-lg text-xs font-medium transition-all duration-300 flex items-center space-x-1 group"
                      >
                        <span className="text-sm">üõ†Ô∏è</span>
                        <span>{currentLanguage.code === 'sv' ? 'Support & Hj√§lp' : 'Support & Help'}</span>
                        <ArrowRight size={10} className="group-hover:translate-x-1 transition-transform" />
                      </button>
                    </div>
                  </motion.div>
                )}
                
                {/* Premium Input */}
                <div className="flex items-center space-x-2">
                  <div className="flex-1 relative">
                    <input
                      ref={inputRef}
                      type="text"
                      value={inputText}
                      onChange={(e) => setInputText(e.target.value)}
                      onKeyPress={handleKeyPress}
                      placeholder={currentLanguage.code === 'sv' ? 'St√§ll en detaljerad fr√•ga om v√•ra digitala l√∂sningar...' : 'Ask a detailed question about our digital solutions...'}
                      className="w-full p-3 pr-10 border-2 border-gray-200 rounded-xl focus:outline-none focus:ring-2 focus:ring-blue-500/20 focus:border-blue-500 bg-gray-50 hover:bg-white transition-all duration-300 text-gray-800 placeholder-gray-500 text-sm"
                      disabled={isTyping}
                      maxLength={500}
                    />
                    <div className="absolute right-3 top-1/2 transform -translate-y-1/2 text-gray-400">
                      <MessageSquare size={16} />
                    </div>
                  </div>
                  <motion.button
                    onClick={handleSendMessage}
                    disabled={!inputText.trim() || isTyping}
                    className="bg-gradient-to-r from-blue-500 to-purple-500 hover:from-blue-600 hover:to-purple-600 text-white p-3 rounded-xl transition-all duration-300 disabled:opacity-50 disabled:cursor-not-allowed shadow-lg hover:shadow-xl touch-manipulation group"
                    whileHover={{ scale: 1.05 }}
                    whileTap={{ scale: 0.95 }}
                  >
                    <Send size={18} className="group-hover:translate-x-1 transition-transform duration-200" />
                  </motion.button>
                </div>
                
                {/* Contact options */}
                <div className="mt-3 flex items-center justify-center space-x-4 text-xs text-gray-500">
                  <a 
                    href="mailto:stefan@axiestudio.se"
                    className="flex items-center space-x-2 hover:text-blue-600 transition-colors group"
                  >
                    <Mail size={12} className="group-hover:scale-110 transition-transform" />
                    <span>{currentLanguage.code === 'sv' ? 'E-post: stefan@axiestudio.se' : 'Email: stefan@axiestudio.se'}</span>
                  </a>
                  <a 
                    href="tel:+46735132620"
                    className="flex items-center space-x-2 hover:text-green-600 transition-colors group"
                  >
                    <Phone size={12} className="group-hover:scale-110 transition-transform" />
                    <span>{currentLanguage.code === 'sv' ? 'Telefon: +46 735 132 620' : 'Phone: +46 735 132 620'}</span>
                  </a>
                </div>
              </div>
            </div>
          )}

          {/* Premium Booking Modal */}
          <AnimatePresence>
            {isBookingModalOpen && (
              <motion.div
                className="absolute inset-0 bg-white flex flex-col z-50"
                initial={{ opacity: 0, y: "100%" }}
                animate={{ opacity: 1, y: 0 }}
                exit={{ opacity: 0, y: "100%" }}
                transition={{ type: "spring", stiffness: 300, damping: 30 }}
              >
                {/* Premium Booking Header */}
                <div className="bg-gradient-to-r from-green-500 via-emerald-500 to-teal-500 text-white p-6 flex-shrink-0 shadow-xl relative overflow-hidden">
                  {/* Background effects */}
                  <div className="absolute inset-0 bg-gradient-to-r from-white/10 to-transparent" />
                  <div className="absolute top-0 right-0 w-64 h-64 bg-white/10 rounded-full -translate-y-32 translate-x-32 animate-pulse" />
                  
                  <div className="relative z-10 flex items-center justify-between">
                    <div className="flex items-center space-x-4">
                      <div className="bg-white/20 p-3 rounded-2xl backdrop-blur-sm border border-white/30 shadow-lg">
                        <Calendar className="text-white" size={28} />
                      </div>
                      <div>
                        <h2 className="text-2xl font-black text-white">
                          {currentLanguage.code === 'sv' ? 'Boka Din Kostnadsfria Konsultation' : 'Book Your Free Consultation'}
                        </h2>
                        <p className="text-white/90 text-lg">
                          {currentLanguage.code === 'sv' ? 'V√§lj en tid som passar dig perfekt - helt kostnadsfritt och utan f√∂rpliktelser' : 'Choose a time that suits you perfectly - completely free and without obligations'}
                        </p>
                      </div>
                    </div>
                    
                    <button
                      onClick={handleCloseBooking}
                      className="bg-white/20 hover:bg-red-500/80 p-3 rounded-2xl transition-all duration-300 touch-manipulation min-w-[52px] min-h-[52px] flex items-center justify-center backdrop-blur-sm border border-white/30 group"
                    >
                      <X size={24} className="text-white group-hover:rotate-90 transition-transform duration-300" />
                    </button>
                  </div>
                  
                  {/* Premium Features */}
                  <div className="relative z-10 mt-6 grid grid-cols-1 md:grid-cols-3 gap-4">
                    <div className="flex items-center space-x-3 bg-white/20 backdrop-blur-sm rounded-2xl px-4 py-3 border border-white/30">
                      <Clock size={20} className="text-white" />
                      <div>
                        <div className="text-white font-semibold">{currentLanguage.code === 'sv' ? '30-60 minuter' : '30-60 minutes'}</div>
                        <div className="text-white/80 text-sm">{currentLanguage.code === 'sv' ? 'Personlig genomg√•ng av dina behov' : 'Personal review of your needs'}</div>
                      </div>
                    </div>
                    <div className="flex items-center space-x-3 bg-white/20 backdrop-blur-sm rounded-2xl px-4 py-3 border border-white/30">
                      <Sparkles size={20} className="text-white" />
                      <div>
                        <div className="text-white font-semibold">{currentLanguage.code === 'sv' ? '100% Kostnadsfritt' : '100% Free'}</div>
                        <div className="text-white/80 text-sm">{currentLanguage.code === 'sv' ? 'Inga dolda kostnader eller f√∂rpliktelser' : 'No hidden costs or obligations'}</div>
                      </div>
                    </div>
                    <div className="flex items-center space-x-3 bg-white/20 backdrop-blur-sm rounded-2xl px-4 py-3 border border-white/30">
                      <Brain size={20} className="text-white" />
                      <div>
                        <div className="text-white font-semibold">{currentLanguage.code === 'sv' ? 'Stefan Lindstr√∂m' : 'Stefan Lindstr√∂m'}</div>
                        <div className="text-white/80 text-sm">{currentLanguage.code === 'sv' ? 'Grundare & AI-expert' : 'Founder & AI expert'}</div>
                      </div>
                    </div>
                  </div>
                </div>
                
                {/* Premium Booking Content */}
                <div className="flex-1 bg-white overflow-hidden relative">
                  {/* Loading State */}
                  {isBookingLoading && (
                    <div className="absolute inset-0 flex items-center justify-center bg-gradient-to-br from-gray-50 to-blue-50 z-10">
                      <div className="text-center">
                        <div className="inline-block animate-spin rounded-full h-16 w-16 border-b-4 border-green-500 mb-6"></div>
                        <h3 className="text-xl font-bold text-gray-800 mb-2">
                          {currentLanguage.code === 'sv' ? 'Laddar din personliga bokningskalender...' : 'Loading your personal booking calendar...'}
                        </h3>
                        <p className="text-gray-600 text-sm">
                          {currentLanguage.code === 'sv' ? 'F√∂rbereder din premium bokningsupplevelse med alla tillg√§ngliga tider...' : 'Preparing your premium booking experience with all available times...'}
                        </p>
                        <div className="mt-4 flex items-center justify-center space-x-2">
                          <CheckCircle className="text-green-500" size={16} />
                          <span className="text-sm text-gray-600">{currentLanguage.code === 'sv' ? 'S√§ker och krypterad bokningsprocess' : 'Secure and encrypted booking process'}</span>
                        </div>
                      </div>
                    </div>
                  )}
                  
                  {/* Google Calendar Iframe */}
                  <iframe
                    src="https://calendar.google.com/calendar/u/0/appointments/schedules/AcZssZ0QR3uRxVB7rb4ZHqJ1qYmz-T0e2CFtV5MYekvGDq1qyWxsV_Av3nP3zEGk0DrH2HqpTLoXuK0h"
                    className="w-full h-full border-0"
                    onLoad={handleIframeLoad}
                    title={currentLanguage.code === 'sv' ? 'Boka din kostnadsfria konsultation med Stefan' : 'Book your free consultation with Stefan'}
                    style={{
                      minHeight: '500px',
                      background: 'white'
                    }}
                  />
                </div>
              </motion.div>
            )}
          </AnimatePresence>
        </motion.div>
      </motion.div>
    </AnimatePresence>
  );
};

export default AIChat;